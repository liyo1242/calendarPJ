"use strict";

function Calendar(id, size, labelSettings, colors, func) {
    this.id = id;
    this.size = size;
    this.labelSettings = labelSettings;
    this.colors = colors;
    this.initday = 0;
    func = func || {};
    this.indicator = !0;
    func.indicator != void 0 && (this.indicator = func.indicator);

    var li = document.createElement("LI");
    li.className = "list-placeholder";
    li.appendChild(document.createTextNode("尚未規劃任何活動 , 輕觸即可建立"));
    li.setAttribute('type', 'button');
    li.setAttribute('data-target', '#exampleModal');
    li.setAttribute('data-toggle', 'modal');


    this.placeholder = li.outerHTML;
    func.placeholder != void 0 && (this.placeholder = func.placeholder);

    var month = ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"];
    func.months != void 0 && 12 == func.months.length && (month = func.months);

    var week = ["日", "一", "二", "三", "四", "五", "六"];
    func.days != void 0 && 7 == func.days.length && (week = func.days);

    this.months = month;
    this.label = [];
    this.labels = [];

    for (var l = 0; 7 > l; l++)
        this.label.push(week[week.indexOf(labelSettings[0]) + this.label.length >= week.length ? Math.abs(week.length - (week.indexOf(labelSettings[0]) + this.label.length)) : week.indexOf(labelSettings[0]) + this.label.length]);
    for (var l = 0; 7 > l; l++)
        this.labels.push(this.label[l]);

    this.date = new Date;
    this.today = new Date;
    this.draw();
    this.update();
    this.setOnClickListener("days-blocks");
    this.setOnClickListener("month-slider");
    this.setOnClickListener("year-slider");
}

Calendar.prototype = {
        constructor: Calendar,
        back: function(select) {
            var date = this.date,
                next = new Date(11 < date.getMonth() + 1 ? date.getFullYear() + 1 : date.getFullYear(),
                    12 < date.getMonth() + 1 ? 0 : date.getMonth() + 1,
                    0).getDate(),
                previous = new Date(0 > date.getMonth() ? date.getFullYear() - 1 : date.getFullYear(),
                    0 > date.getMonth() ? 11 : date.getMonth(),
                    0).getDate();
            "month" == select ? (date.getDate() > previous && this.changeDateTo(previous), 0 < date.getMonth() ? date.setMonth(date.getMonth() - 1) : (date.setMonth(11), date.setFullYear(date.getFullYear() - 1))) : "year" == select && date.setFullYear(date.getFullYear() - 1), this.update()
        },
        next: function(select) {
            var date = this.date,
                next = new Date(11 < date.getMonth() + 1 ? date.getFullYear() + 1 : date.getFullYear(), 12 < date.getMonth() + 1 ? 0 : date.getMonth() + 1, 0).getDate(),
                previous = new Date(11 < date.getMonth() + 2 ? date.getFullYear() + 1 : date.getFullYear(), 12 < date.getMonth() + 2 ? 0 : date.getMonth() + 2, 0).getDate();
            "month" == select ? (date.getDate() > previous && this.changeDateTo(previous), 11 == date.getMonth() ? (date.setMonth(0), date.setFullYear(date.getFullYear() + 1)) : date.setMonth(date.getMonth() + 1)) : date.setFullYear(date.getFullYear() + 1), this.update()
        },
        changeDateTo: function(select, Specifyday) {
            if (31 <= Specifyday && 11 >= select || 6 >= Specifyday && 8 <= select) {
                31 <= Specifyday && 11 >= select ? this.next("month") : 6 >= Specifyday && 8 <= select && this.back("month"), this.date.setDate(select);
                var d = this;
                return setTimeout(function() {
                    d.update()
                }, 1), !0
            }
            this.date.setDate(select)
        }
    },

    Calendar.prototype.draw = function() {
        var leftArrow = "<svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\"><path fill=\"" + this.colors[3] + "\" d=\"M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z\"></path></svg>",
            rightArrow = "<svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\"><path fill=\"" + this.colors[3] + "\" d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\"></path></svg>",
            calendarSection = document.createElement("DIV");

        calendarSection.className = "calendar " + this.size, document.getElementById(this.id).appendChild(calendarSection.cloneNode(!0));
        for (var calendarVirtualSection = [], calendarSectionClass = ["year", "month", "labels", "days"], calendarSectionIndex = 0; calendarSectionIndex < calendarSectionClass.length; calendarSectionIndex++)
            if (calendarVirtualSection[calendarSectionIndex] = document.createElement("DIV"), calendarVirtualSection[calendarSectionIndex].className = calendarSectionClass[calendarSectionIndex], "days" != calendarSectionClass[calendarSectionIndex])
                if ("month" == calendarSectionClass[calendarSectionIndex]) {

                    calendarVirtualSection[calendarSectionIndex].style.backgroundColor = this.colors[0];
                    calendarVirtualSection[calendarSectionIndex].style.color = this.colors[2];

                    var leftArrowDiv = document.createElement("DIV");
                    leftArrowDiv.id = this.id + "-month-back";
                    leftArrowDiv.insertAdjacentHTML("beforeend", leftArrow);
                    calendarVirtualSection[calendarSectionIndex].appendChild(leftArrowDiv.cloneNode(!0));

                    var todayBtn = document.createElement("BUTTON");
                    todayBtn.id = "goToToday";
                    todayBtn.className = "btn";
                    todayBtn.innerHTML = this.date.getDate();

                    var dateSpan = document.createElement("SPAN");
                    dateSpan.id = this.id + "-" + calendarSectionClass[calendarSectionIndex];
                    calendarVirtualSection[calendarSectionIndex].appendChild(dateSpan.cloneNode(!0));

                    var rightArrowDiv = document.createElement("DIV");
                    rightArrowDiv.id = this.id + "-month-next";
                    rightArrowDiv.insertAdjacentHTML("beforeend", rightArrow);
                    calendarVirtualSection[calendarSectionIndex].appendChild(rightArrowDiv.cloneNode(!0));
                    calendarVirtualSection[calendarSectionIndex].appendChild(todayBtn);

                } else if (calendarVirtualSection[calendarSectionIndex].style.backgroundColor = this.colors[1], calendarVirtualSection[calendarSectionIndex].style.color = this.colors[3], "labels" != calendarSectionClass[calendarSectionIndex]) {

            var week = ["以一開始", "切換帳號"]; // dropdown list
            var dropdownId = ["we", "tr"];
            var dropdown = document.createElement('DIV');
            var dropdownBear = document.createElement('IMG');
            var dropdownContent = document.createElement('DIV');

            dropdown.id = "dropdown";
            dropdown.className = "dropdown";
            dropdownBear.className = "dropbtn";
            dropdownBear.src = "/styles/img/bear.jpg";
            dropdownContent.className = "dropdown-content";

            for (var xd = 0; xd < week.length; xd++) {
                var selectButton = document.createElement('BUTTON');
                selectButton.id = dropdownId[xd];
                selectButton.innerHTML = week[xd];
                selectButton.className = "btn";
                selectButton.style.width = "100%";
                dropdownContent.appendChild(selectButton);
            }

            dropdown.appendChild(dropdownBear);
            dropdown.appendChild(dropdownContent);

            var k = document.createElement("SPAN");
            k.id = this.id + "-" + calendarSectionClass[calendarSectionIndex], calendarVirtualSection[calendarSectionIndex].appendChild(dropdown), calendarVirtualSection[calendarSectionIndex].appendChild(k.cloneNode(!0));
            //var l = document.createElement("DIV");
            //l.id = this.id + "-year-next", l.insertAdjacentHTML("beforeend", b), d[g].appendChild(l.cloneNode(!0))
        }


        for (var weekSectionText, weekSectionTextIndex = 0; weekSectionTextIndex < this.labels.length; weekSectionTextIndex++) {
            weekSectionText = document.createElement("SPAN");
            weekSectionText.id = this.id + "-label-" + (weekSectionTextIndex + 1);
            weekSectionText.appendChild(document.createTextNode(this.labels[weekSectionTextIndex]).cloneNode(!0));
            calendarVirtualSection[2].appendChild(weekSectionText.cloneNode(!0));
        }
        for (var dateColumn = [], dateLabelColumn = [], dateInputColumn = [], g = 0; 6 > g; g++) {
            dateColumn[g] = document.createElement("DIV");
            dateColumn[g].className = "no-gutters row r-" + g;
        }
        for (var g = 0, q = 0; 42 > g; g++) {
            dateInputColumn[g] = document.createElement("INPUT");
            dateInputColumn[g].className = "day-radios";
            dateInputColumn[g].type = "radio";
            dateInputColumn[g].name = this.id + "-day-radios";
            dateInputColumn[g].id = this.id + "-day-radio-" + (g + 1);
            dateLabelColumn[g] = document.createElement("LABEL");
            dateLabelColumn[g].className = "day";
            dateLabelColumn[g].htmlFor = this.id + "-day-radio-" + (g + 1);
            dateLabelColumn[g].id = this.id + "-day-" + (g + 1);
            var k = document.createElement("SPAN");
            k.id = this.id + "-day-num-" + (g + 1);
            dateLabelColumn[g].appendChild(k.cloneNode(!0));
            dateColumn[q].appendChild(dateInputColumn[g].cloneNode(!0));
            dateColumn[q].appendChild(dateLabelColumn[g].cloneNode(!0));
            0 == (g + 1) % 7 && q++;
        }

        for (var g = 0; 6 > g; g++) calendarVirtualSection[3].appendChild(dateColumn[g].cloneNode(!0));
        //for (var g = 0; g < d.length; g++) c.appendChild(d[g].cloneNode(!0)); // class calendar append element
        //======= cut the year and month part
        var yearandmonth = document.createElement("DIV");
        yearandmonth.className = "yearandmonth"
        yearandmonth.appendChild(calendarVirtualSection[0].cloneNode(!0)); // append year div
        yearandmonth.appendChild(calendarVirtualSection[1].cloneNode(!0)); // append month div
        calendarSection.appendChild(yearandmonth); // year and month
        calendarSection.appendChild(calendarVirtualSection[2].cloneNode(!0)); // labels
        calendarSection.appendChild(calendarVirtualSection[3].cloneNode(!0)); // days
        //======= cut
        document.getElementById(this.id).innerHTML = "<style>.day.active::before { background-color: " + this.colors[1] + ";opacity: 0.4; } .day.today > span { border-color: " + "#009fff" + " !important; color: #009fff;}</style>",
            document.getElementById(this.id).appendChild(calendarSection.cloneNode(!0))
    },


    Calendar.prototype.update = function() {

        document.getElementById(this.id + "-year").innerHTML = "", // year div inside word
            document.getElementById(this.id + "-month").innerHTML = this.date.getFullYear() + "年  " + this.months[this.date.getMonth()]; // month div inside word
        for (var a = 1; 42 >= a; a++) // Create class and initialize
            document.getElementById(this.id + "-day-num-" + a).innerHTML = "",
            document.getElementById(this.id + "-day-" + a).className = this.id + " day listed";
        var fulabel = ["日", "一", "二", "三", "四", "五", "六"];
        var b = new Date(this.date.getFullYear(), // the first day in this monment
                this.date.getMonth(), 1).getDay(),
            c = new Date(11 < this.date.getMonth() + 1 ? this.date.getFullYear() + 1 : this.date.getFullYear(), // Judging more than December
                12 < this.date.getMonth() + 1 ? 0 : this.date.getMonth() + 1, 0).getDate(),
            d = new Date(0 > this.date.getMonth() ? this.date.getFullYear() - 1 : this.date.getFullYear(), 0 > this.date.getMonth() ? 11 : this.date.getMonth(), 0).getDate(); // Judging less than January
        this.initday = this.label.indexOf(fulabel[b]); // first day place on this month

        for (var a = 0, f = d; a < this.label.indexOf(fulabel[b]); a++, f--) // a few days after the previous month
            document.getElementById(this.id + "-day-num-" + (this.label.indexOf(fulabel[b]) - a)).innerHTML = f,
            document.getElementById(this.id + "-day-" + (this.label.indexOf(fulabel[b]) - a)).className = this.id + " day diluted";

        for (var a = 1; a <= c; a++) // the day draw on this month
        { //fuckyou
            document.getElementById(this.id + "-day-num-" + (this.label.indexOf(fulabel[b]) + a)).innerHTML = a, // [this.date.getFullYear()][this.date.getMonth()][a]
                a == this.date.getDate() && (document.getElementById(this.id + "-day-radio-" + (this.label.indexOf(fulabel[b]) + a)).checked = !0),
                this.date.getMonth() == this.today.getMonth() && a == this.today.getDate() && (document.getElementById(this.id + "-day-" + (this.label.indexOf(fulabel[b]) + a)).className += " today");
        }
        for (var a = c + 1, f = 1; 42 >= this.label.indexOf(fulabel[b]) + a; a++, f++) // A few days before the next month
            document.getElementById(this.id + "-day-num-" + (this.label.indexOf(fulabel[b]) + a)).innerHTML = f,
            document.getElementById(this.id + "-day-" + (this.label.indexOf(fulabel[b]) + a)).className = this.id + " day diluted"
    },

    Calendar.prototype.updateAllEvent = function(data) {
        var eventData = data;
        var fuck = this.date;
        var fulabel = ["日", "一", "二", "三", "四", "五", "六"];

        var warCriminal = document.querySelectorAll(".dayEvent");
        if (warCriminal.length != 0) {
            for (var i = 0; i < warCriminal.length; i++) {
                var child = warCriminal[i];
                child.parentNode.removeChild(child);
            }
        }

        var b = new Date(this.date.getFullYear(), // the first day in this monment
            this.date.getMonth(), 1).getDay();

        var c = new Date(11 < this.date.getMonth() + 1 ? this.date.getFullYear() + 1 : this.date.getFullYear(), // Judging more than December
            12 < this.date.getMonth() + 1 ? 0 : this.date.getMonth() + 1, 0).getDate()
        for (var a = 1; a <= c; a++) // the day draw on this month
        { //fuckyou
            if (eventData[fuck.getFullYear()] != undefined) {
                if (eventData[fuck.getFullYear()][fuck.getMonth() + 1] != undefined) {
                    var dayEventLine = eventData[fuck.getFullYear()][fuck.getMonth() + 1][a];

                    if (dayEventLine != undefined) {
                        for (var Roundtable = document.createElement("DIV"), cc = 0; cc < dayEventLine.length; cc++) {
                            Roundtable.className = "dayEvent";
                            var Knights = document.createElement("DIV");
                            Knights.className = dayEventLine[cc].id;
                            // handle time text Present
                            var tengwarWord;
                            if (parseInt(dayEventLine[cc].startTime.slice(0, 2)) >= 12) {
                                var overflow = parseInt(dayEventLine[cc].startTime.slice(0, 2)) - 12;

                                if (dayEventLine[cc].startTime.slice(3, 5) == "00") {
                                    tengwarWord = "下午" + overflow + "點";
                                } else {
                                    tengwarWord = "下午" + overflow + dayEventLine[cc].startTime.slice(2, 5);
                                }
                            } else {
                                if (dayEventLine[cc].startTime.slice(3, 5) == "00") {
                                    tengwarWord = "上午" + parseInt(dayEventLine[cc].startTime.slice(0, 2)) + "點";
                                } else {
                                    tengwarWord = "上午" + parseInt(dayEventLine[cc].startTime.slice(0, 2)) + dayEventLine[cc].startTime.slice(2, 5);
                                }
                            }
                            var gandalfBall = document.createElement("DIV");
                            gandalfBall.className = "gandalfBall";
                            var timePresent = document.createElement("DIV");
                            timePresent.className = "timePresent";
                            timePresent.appendChild(document.createTextNode(tengwarWord));
                            var titlePresent = document.createElement("DIV");
                            titlePresent.className = "titlePresent";
                            titlePresent.appendChild(document.createTextNode(dayEventLine[cc].title));

                            if (dayEventLine[cc].holyfire) {
                                Knights.style.backgroundColor = "#f2d9f9";
                                gandalfBall.classList.remove("gandalfBall");
                                gandalfBall.className = "fullday";
                            }

                            Knights.appendChild(gandalfBall);
                            Knights.appendChild(timePresent);
                            Knights.appendChild(titlePresent);

                            if (cc > 2) {
                                console.log('fuck you get out');
                                Knights.style.display = "none";
                            }
                            Roundtable.appendChild(Knights);
                        }

                        // need to sort Roundtable
                        if (Roundtable.childNodes.length > 3) {
                            Roundtable.childNodes[2].style.display = "none";
                            var assassin = document.createElement("BUTTON");
                            assassin.className = "btn";
                            assassin.textContent = "還有" + (Roundtable.childNodes.length - 2) + "個";
                            Roundtable.appendChild(assassin);
                        }
                        document.getElementById(this.id + "-day-" + (this.label.indexOf(fulabel[b]) + a)).appendChild(Roundtable);
                    }
                }
            }
        }
    },

    // 所有從 google 抓來的資料 會在 /middle/calendarFormat.js 做切割 所有事件以天為單位做分割 分割後的事件以相同id做分類 就是那個class
    // 主事件全都包含於 div .days
    // 每週會是一個 row r-X , X 為第幾行
    // 每一天由 label 與 input 組成
    // label 裡包含 span(識別) 與 div(事件)
    // 一天的事件會包在label裡面 class = .dayEvent
    // dayEvent 中的個別事件div 包括三個部分 = 判斷fullday , 時間欄位 , 文字欄位

    // label 裡面的 span -> calendarContainer-day-num-X , X為此方格識別 主要判斷是在42格中的第幾格 並不是日期
    // 每個事件會用div包著 class 為此事件的代表id



    Calendar.prototype.resorted = function() { // 日曆事件排序
        var orderMAP = {};
        for (var dalf = 0; dalf < 6; dalf++) {
            $(`.days .r-${dalf} label .dayEvent`).each(function() { // days event => dayEvent中的每個事件
                // Sort by time
                var gandalfSort = [];
                // 這裡把文字資料都先存起來 因為等下要全部刪光
                $(this).children().each(function() { // time title fulldayflag 每個事件的三個欄位 ( 文字 時間)
                    // save eventTime and id -> $(this).attr('class')為取外層事件id ( 其實放在class )
                    gandalfSort.push({ id: $(this).attr('class'), time: $(this).find('.timePresent').html(), full: $(this).find('.fullday').length })
                });

                gandalfSort = gandalfSort.sort(function(a, b) { //神奇排序法
                    return a.time > b.time ? 1 : -1;
                });

                var showOrder = [-1, -1, -1];
                var stack = [];
                gandalfSort.forEach(function(gandalf, index) {
                    (gandalf.id in orderMAP) ? showOrder[orderMAP[gandalf.id]] = gandalf: stack.push(gandalf);
                });

                showOrder.forEach(function(order, index) {
                    if (order == -1 && stack.length != 0) {
                        var gandalf = stack.pop();
                        showOrder[index] = gandalf;
                        orderMAP[gandalf.id] = index;
                    }
                });

                for (var gandalfOrder = 0; gandalfOrder < 3; gandalfOrder++) {
                    $(this).find(`.${showOrder[gandalfOrder].id}`).css('order', gandalfOrder + 1);
                    $(this).find(`.${showOrder[gandalfOrder].id}`).css('top', `${(gandalfOrder*33)}%`);


                    if (gandalfOrder >= 3) {
                        $(this).find(`.${showOrder[gandalfOrder].id}`).css('display', "none");
                    } else {
                        $(this).find(`.${showOrder[gandalfOrder].id}`).css('display', "inline");
                    }
                }

            })
        }
    },

    Calendar.prototype.remastered = function() { // 日曆事件CSS 調變
        // search all row ==> 6 times r-0 ~ r-5
        var gandalfBox = [];
        var holyGandalfBox = []; // 好像沒什麼用 當初是把 gandalfBox 重複元素去掉而已
        var gandalfCount = {};
        for (var dalf = 0; dalf < 6; dalf++) {
            // search the fullday class in row
            $(`.days .r-${dalf} label .dayEvent>div .fullday`).each(function() {
                gandalfBox.push($(this).parent().attr('class')) // 蒐集class ( 事件id )
            })

            holyGandalfBox = Array.from(new Set(gandalfBox)); // holyGandalfBox = [...(new Set(gandalfBox))]

            gandalfCount = gandalfBox.reduce((obj, item) => { // 這主要是在數 這個id在陣列裡的數目 然後當成key value
                obj[item] = obj[item] ? obj[item] + 1 : 1;
                return obj;
            }, {});


            $.each(gandalfCount, function(index, value) { //  gandalfCount做好後 根據id重複次數 知道這事件佔了多少天 延伸寬度
                // var gandalfPencil = $(`.days .r-${dalf} .${index} .timePresent`).html();
                // var gandalfPencil2 = $(`.days .r-${dalf} .${index} .titlePresent`).html();
                $(`.days .r-${dalf} .${index}`).css('display', 'none');
                $(`.days .r-${dalf} .${index} .timePresent`).css('display', 'none'); // 先把同事件id的 所有div隱形
                $(`.days .r-${dalf} .${index} .titlePresent`).css('display', 'none');
                //
                $(`.days .r-${dalf} .${index}:eq(0)`).css('display', 'inline');
                $(`.days .r-${dalf} .${index} .timePresent:eq(0)`).css('display', 'inline'); // 第一個在row找到的事件 必定為開頭 把隱形關掉
                $(`.days .r-${dalf} .${index} .titlePresent:eq(0)`).css('display', 'inline');
                $(`.days .r-${dalf} .${index}:eq(0)`).css("width", `${value}00%`); // 第一個在row找到的事件 必定為開頭 增長寬度
            });

            $.each(gandalfCount, function(index, value) { //  gandalfCount做好後 根據id重複次數 知道這事件佔了多少天 延伸寬度
                // var gandalfPencil = $(`.days .r-${dalf} .${index} .timePresent`).html();
                // var gandalfPencil2 = $(`.days .r-${dalf} .${index} .titlePresent`).html();
                $(`.days .r-${dalf} .${index}`).css('display', 'none');
                $(`.days .r-${dalf} .${index} .timePresent`).css('display', 'none'); // 先把同事件id的 所有div隱形
                $(`.days .r-${dalf} .${index} .titlePresent`).css('display', 'none');
                //
                $(`.days .r-${dalf} .${index}:eq(0)`).css('display', 'inline');
                $(`.days .r-${dalf} .${index} .timePresent:eq(0)`).css('display', 'inline'); // 第一個在row找到的事件 必定為開頭 把隱形關掉
                $(`.days .r-${dalf} .${index} .titlePresent:eq(0)`).css('display', 'inline');
                $(`.days .r-${dalf} .${index}:eq(0)`).css("width", `${value}00%`); // 第一個在row找到的事件 必定為開頭 增長寬度
            });

            gandalfBox = [];
            holyGandalfBox = [];
            gandalfCount = {};
        }

    },

    Calendar.prototype.setupBlock = function(a, b, c) {
        document.getElementById(b.id + "-day-" + a).onclick = function() {
            0 < document.getElementById(b.id + "-day-num-" + a).innerHTML.length && (b.changeDateTo(document.getElementById(b.id + "-day-num-" + a).innerHTML, a), c())
        }
    },

    Calendar.prototype.setOnClickListener = function(a, b, c) {
        var d = this.id;
        b = b || function() {}, c = c || function() {};
        var f = this;
        switch (a) {
            case "days-blocks":
                for (var g = 1; 42 >= g; g++) f.setupBlock(g, f, b);
                break;
            case "month-slider":
                document.getElementById(d + "-month-back").onclick = function() {
                    f.back("month"), b()
                }, document.getElementById(d + "-month-next").onclick = function() {
                    f.next("month"), c()
                };
                break;
        }
    };

function Organizer(id, calendar, data) {
    this.id = id,
        this.calendar = calendar,
        this.data = data || {},
        this.draw();
    var d = this;
    d.onMonthChange(function() {
        d.indicateEvents()
    }), this.setOnClickListener("days-blocks"), this.setOnClickListener("day-slider"), this.setOnClickListener("month-slider"), this.setOnClickListener("goToToday");
}
Organizer.prototype = {
        constructor: Organizer,
        back: function(b) {
            var c = this.calendar.date,
                d = new Date(11 < c.getMonth() + 1 ? c.getFullYear() + 1 : c.getFullYear(), 12 < c.getMonth() + 1 ? 0 : c.getMonth() + 1, 0).getDate(),
                f = new Date(0 > c.getMonth() ? c.getFullYear() - 1 : c.getFullYear(), 0 > c.getMonth() ? 11 : c.getMonth(), 0).getDate();
            if ("day" == b) {
                if (1 != c.getDate()) this.changeDateTo(c.getDate() - 1), this.update();
                else {
                    this.calendar.back("month"), this.changeDateTo(d);
                    var g = this;
                    g.onMonthChange(function() {
                        g.indicateEvents()
                    })
                }
                document.getElementById(this.calendar.id + "-day-radio-" + (this.calendar.initday + c.getDate())).checked = !0
            } else {
                this.calendar.back(b);
                var g = this;
                g.onMonthChange(function() {
                    g.indicateEvents()
                })
            }
        },
        next: function(b) {
            var c = this.calendar.date,
                d = new Date(11 < c.getMonth() + 1 ? c.getFullYear() + 1 : c.getFullYear(), 12 < c.getMonth() + 1 ? 0 : c.getMonth() + 1, 0).getDate(),
                f = new Date(11 < c.getMonth() + 2 ? c.getFullYear() + 1 : c.getFullYear(), 12 < c.getMonth() + 2 ? 0 : c.getMonth() + 2, 0).getDate();
            if ("day" == b) {
                if (c.getDate() != d) c.setDate(c.getDate() + 1), this.update();
                else {
                    this.calendar.next("month"), c.setDate(1);
                    var g = this;
                    g.onMonthChange(function() {
                        g.indicateEvents()
                    })
                }
                document.getElementById(this.calendar.id + "-day-radio-" + (this.calendar.initday + c.getDate())).checked = !0
            } else {
                this.calendar.next(b);
                var g = this;
                g.onMonthChange(function() {
                    g.indicateEvents()
                })
            }
        },
        changeDateTo: function(b, c) {
            var d = this.calendar.changeDateTo(b, c),
                f = this;
            setTimeout(function() {
                d ? f.onMonthChange(function() {
                    f.indicateEvents()
                }) : f.update()
            }, 1)
        }, // abcvvv
        today: function(t) {
            // console.log('ss');
            this.calendar.date = new Date;
            this.calendar.update();
            var g = this;
            g.onMonthChange(function() {
                g.indicateEvents()
            })
        }
    },

    Organizer.prototype.draw = function() {
        if (!$('.events').length) {
            var a = "<svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\"><path fill=\"" + this.calendar.colors[3] + "\" d=\"M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z\"></path></svg>",
                b = "<svg style=\"width: 24px; height: 24px;\" viewBox=\"0 0 24 24\"><path fill=\"" + this.calendar.colors[3] + "\" d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\"></path></svg>",
                c = document.createElement("DIV");
            c.className = "events " + this.calendar.size;
            var d = document.createElement("DIV");
            d.className = "date", d.style.backgroundColor = this.calendar.colors[1], d.style.color = this.calendar.colors[3];
            var f = document.createElement("DIV");
            f.id = this.id + "-day-back", f.insertAdjacentHTML("beforeend", a), d.appendChild(f.cloneNode(!0));
            var g = document.createElement("SPAN");
            g.id = this.id + "-date", d.appendChild(g.cloneNode(!0));
            var h = document.createElement("DIV");
            h.id = this.id + "-day-next", h.insertAdjacentHTML("beforeend", b), d.appendChild(h.cloneNode(!0));
            var k = document.createElement("DIV");
            k.className = "rows";
            var l = document.createElement("OL");
            l.className = "list example item-list" /* item-list example */ , l.id = this.id + "-list", k.appendChild(l.cloneNode(!0)), c.appendChild(d.cloneNode(!0)), c.appendChild(k.cloneNode(!0)), document.getElementById(this.id).appendChild(c.cloneNode(!0));
        }
        $('#organizerContainer-date').on('DOMSubtreeModified',function(){
            var dd = moment();
            const newStartTime = (dd.get('minute') > 30 ? dd.add(1, 'h') : dd);
            const disMinute = (dd.get('minute') > 30 ? "00" : "30");
            var sendData = {
                startTime: (newStartTime.get('hour') < 10 ? "0" : "") + newStartTime.get('hour') + ":" + disMinute,
                endTime: (newStartTime.add(1, 'h').get('hour') < 10 ? "0" : "") + newStartTime.get('hour') + ":" + disMinute,
                time: $('#organizerContainer-date').html()
            }
            $('.btnpos').attr("data-whatever", JSON.stringify(sendData));
            console.log($('#organizerContainer-date').html())
            console.log('need to recoder');
        });
    },

    Organizer.prototype.update = function() {
        if (this.calendar.months[this.calendar.date.getMonth()].length < 3) {
            document.getElementById(this.id + "-date").innerHTML = this.calendar.date.getFullYear() + " " + "0" + this.calendar.months[this.calendar.date.getMonth()] + " " + this.calendar.date.getDate(), document.getElementById(this.id + "-list").innerHTML = "", this.showEvents();
        } else {
            document.getElementById(this.id + "-date").innerHTML = this.calendar.date.getFullYear() + " " + this.calendar.months[this.calendar.date.getMonth()] + " " + this.calendar.date.getDate(), document.getElementById(this.id + "-list").innerHTML = "", this.showEvents()
        }
    },

    Organizer.prototype.list = function(data) {
        document.getElementById(this.id + "-list").innerHTML = "";
        for (var d, b = document.createElement("UL"), c = 0; c < data.length; c++) {
            d = document.createElement("LI"), d.className = "item";
            d.id = this.id + "-list-item-" + c;
            var f = document.createElement("DIV"),
                g = document.createElement("SPAN"),
                lineTransfer = document.createElement("A");
            lineTransfer.className = "lineTransfer";
            lineTransfer.style = "width: 50px;flex: 1; background-position: center; background-repeat: no-repeat; background-image: url(https://uxwing.com/wp-content/themes/uxwing/download/10-brands-and-social-media/share-square.png); background-size: 50px;"
            g.id = this.id + "-list-item-" + c + "-time", g.class = this.id + " time", g.appendChild(document.createTextNode(data[c].startTime + " - " + data[c].endTime)), f.appendChild(g);
            var h = document.createElement("P");
            h.setAttribute('data-target', '#exampleModal');
            h.setAttribute('data-toggle', 'modal');
            var sendData = {
                id: data[c].id,
                title: data[c].title,
                text: data[c].text,
                location: data[c].location,
                startTime: data[c].startTime,
                endTime: data[c].endTime,
                time: $('#organizerContainer-date').html()
            }
            var tim = sendData.time.replace('月', "");
            var st = moment(`${tim} ${sendData.startTime}`);
            var end = moment(`${tim} ${sendData.endTime}`);

            var Star = `${st.get('year')}%2d${(st.get('month') + 1)}%2d${st.get('date')}%20${st.get('hour')}%3a${st.get('minute')}`;
            var EndStar = `${end.get('year')}%2d${(end.get('month') + 1)}%2d${end.get('date')}%20${end.get('hour')}%3a${end.get('minute')}`;

            var spStar = `${st.get('year')}%2d${(st.get('month')+ 1)}%2d${st.get('date')}%2f${st.get('hour')}%3a${st.get('minute')}`;
            var spEndStar = `${end.get('year')}%2d${(end.get('month') + 1)}%2d${end.get('date')}%2f${end.get('hour')}%3a${end.get('minute')}`;
            // console.log('data[c].startTime' + data[c].startTime + "\n" + 'data[c].endTime' + data[c].endTime);
            var eventStr = `${sendData.title}%0a開始時間:${Star}%0a結束時間:${EndStar}%0a活動地點:${sendData.location}%0a活動內容:${sendData.text}`;
            var holyEventStr = `${sendData.title}開始時間:${spStar}結束時間:${spEndStar}活動地點:${sendData.location}活動內容:${sendData.text}`
            // var UTF8str = encodeURIComponent(eventStr);
            holyEventStr = holyEventStr.replace(/\s+/g, "");
            var toBotUrl = `https://line.me/R/oaMessage/@upo7574o/?${holyEventStr}`;

            lineTransfer.href = `https://line.me/R/msg/text/?${eventStr}%0a=========================%0a轉傳到Cubee bot%0a${toBotUrl}`
            h.setAttribute("data-whatever", JSON.stringify(sendData));
            h.id = this.id + "-list-item-" + c + "-text";


            // var dbtn = document.createElement("BUTTON");
            // dbtn.className = "action-d" , dbtn.id = "delete-" + a[c].id ;

            // var ubtn = document.createElement("BUTTON");
            // ubtn.className = "action-u" , ubtn.id = "update-" + a[c].id;

            h.appendChild(document.createTextNode(data[c].title)), d.appendChild(f), d.appendChild(h), d.appendChild(lineTransfer), b.appendChild(d);
        }
        var AppointDayAdd = document.createElement("LI");
        AppointDayAdd.className = 'appointDayAdd';
        AppointDayAdd.innerHTML = "點擊在今天加上新事件";
        AppointDayAdd.setAttribute('type', 'button');
        AppointDayAdd.setAttribute('data-target', '#exampleModal');
        AppointDayAdd.setAttribute('data-toggle', 'modal');
        b.appendChild(AppointDayAdd);
        document.getElementById(this.id + "-list").innerHTML = b.innerHTML, 0 == data.length && this.showPlaceholder()
        $('.appointDayAdd').click(() => {
            var sendData = {
                time: $('#organizerContainer-date').html()
            }
            $('.appointDayAdd').attr("data-whatever", JSON.stringify(sendData));
        });
    },

    Organizer.prototype.setupBlock = function(a, b, c) {
        var d = b.calendar;
        document.getElementById(d.id + "-day-" + a).onclick = function() {
            var $body = (window.opera) ? (document.compatMode == 'CSS1Compat' ? $('html') : $('body')) : $('html,body');
            // console.log('fuckgh' + $('#organizerContainer-date').html());
            $body.animate({
                scrollTop: $('#organizerContainer').offset().top
            }, 1000);
            0 < document.getElementById(d.id + "-day-num-" + a).innerHTML.length && (b.changeDateTo(document.getElementById(d.id + "-day-num-" + a).innerHTML, a), c())
        };
    },

    Organizer.prototype.showEvents = function(data) {
        data = data || this.data;
        var date = this.calendar.date;
        try {
            this.list(data[date.getFullYear()][date.getMonth() + 1][date.getDate()])
        } catch (c) {
            this.showPlaceholder()
        }
    },

    Organizer.prototype.showPlaceholder = function() {
        document.getElementById(this.id + "-list").innerHTML = this.calendar.placeholder;

        $('.list-placeholder').click(function() {
            // console.log('fuck you 4+');
            // console.log($('#organizerContainer-date').html())
            var sendData = {
                time: $('#organizerContainer-date').html()
            }
            $('.list-placeholder').attr("data-whatever", JSON.stringify(sendData));
        })
    }

Organizer.prototype.indicateEvents = function(data) {
        this.calendar.updateAllEvent(this.data);
        this.calendar.resorted();
        this.calendar.remastered();
        console.log("there is");
        data = data || this.data;
        var date = this.calendar.date;
        if (this.calendar.indicator) {
            var dateOfMonth = document.getElementsByClassName(this.calendar.id + " day listed"); //Date of the month
            try {
                var d = data[date.getFullYear()][date.getMonth() + 1]; //Calculate the date of the event
                for (var f in d) 0 < d[f].length && (dateOfMonth[f - 1].className += " active")
            } catch (g) {}
        }
        this.update()
    },

    Organizer.prototype.onMonthChange = function(a) {
        a()
    },

    Organizer.prototype.setOnClickListener = function(a, b, c) {
        var d = this.calendar.id,
            f = this.id;
        b = b || function() {}, c = c || function() {};
        var g = this;
        switch (a) {
            case "days-blocks":
                for (var h = 1; 42 >= h; h++) g.setupBlock(h, g, b);
                break;
            case "day-slider":
                document.getElementById(f + "-day-back").onclick = function() {
                    g.back("day"), b()
                }, document.getElementById(f + "-day-next").onclick = function() {
                    g.next("day"), c()
                };
                break;
            case "month-slider":
                document.getElementById(d + "-month-back").onclick = function() {
                    g.back("month"), b()
                }, document.getElementById(d + "-month-next").onclick = function() {
                    g.next("month"), c()
                };
                break;
            case "goToToday":
                document.getElementById("goToToday").onclick = function() {
                    // console.log('bn go go');
                    g.today();
                };
                break;
        }
    };